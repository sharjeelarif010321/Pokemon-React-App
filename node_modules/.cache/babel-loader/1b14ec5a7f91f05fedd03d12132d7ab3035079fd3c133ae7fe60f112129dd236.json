{"ast":null,"code":"var _jsxFileName = \"/Users/sharjeelarif/Desktop/Pokemon-React-App/src/components/BattleView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './BattleView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BattleView = ({\n  pokemonOne,\n  pokemonTwo,\n  battleLog,\n  setBattleLog,\n  resetBattle\n}) => {\n  _s();\n  const [pokemonOneHealth, setPokemonOneHealth] = useState(100);\n  const [pokemonTwoHealth, setPokemonTwoHealth] = useState(100);\n  const [battleEnded, setBattleEnded] = useState(false);\n  const startBattle = async () => {\n    try {\n      let winnerDetermined = false;\n      while (!winnerDetermined) {\n        const moveOne = pokemonOne.moves[Math.floor(Math.random() * pokemonOne.moves.length)].move;\n        const moveTwo = pokemonTwo.moves[Math.floor(Math.random() * pokemonTwo.moves.length)].move;\n        const [moveOneDetails, moveTwoDetails] = await Promise.all([axios.get(moveOne.url), axios.get(moveTwo.url)]);\n        const movePowerOne = moveOneDetails.data.power || 0;\n        const movePowerTwo = moveTwoDetails.data.power || 0;\n        if (movePowerOne > movePowerTwo) {\n          setBattleLog(prevLog => [...prevLog, `${pokemonOne.name} lands a decisive blow with ${moveOneDetails.data.name}, knocking out ${pokemonTwo.name}!`]);\n          setPokemonTwoHealth(0);\n          winnerDetermined = true;\n        } else if (movePowerOne < movePowerTwo) {\n          setBattleLog(prevLog => [...prevLog, `${pokemonTwo.name} lands a decisive blow with ${moveTwoDetails.data.name}, knocking out ${pokemonOne.name}!`]);\n          setPokemonOneHealth(0);\n          winnerDetermined = true;\n        } else {\n          setBattleLog(prevLog => [...prevLog, `It's a tie! Both ${pokemonOne.name} and ${pokemonTwo.name} used equally powerful moves. The battle continues...`]);\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      }\n      setBattleEnded(true);\n    } catch (error) {\n      console.error('Error fetching move details:', error);\n      setBattleLog(prevLog => [...prevLog, 'An error occurred during the battle.']);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Battle View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pokemonOne.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemonOne.sprites.back_default,\n          alt: pokemonOne.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `health-bar ${pokemonOneHealth === 0 ? 'empty' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-fill\",\n            style: {\n              width: `${pokemonOneHealth}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pokemonTwo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemonTwo.sprites.front_default,\n          alt: pokemonTwo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `health-bar ${pokemonTwoHealth === 0 ? 'empty' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-fill\",\n            style: {\n              width: `${pokemonTwoHealth}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), battleEnded ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetBattle,\n      children: \"Select New Pok\\xE9mon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startBattle,\n      children: \"Start Battle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(BattleView, \"/zraGPiJQO1EyCFzlgcSUAkteX0=\");\n_c = BattleView;\nexport default BattleView;\nvar _c;\n$RefreshReg$(_c, \"BattleView\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","BattleView","pokemonOne","pokemonTwo","battleLog","setBattleLog","resetBattle","_s","pokemonOneHealth","setPokemonOneHealth","pokemonTwoHealth","setPokemonTwoHealth","battleEnded","setBattleEnded","startBattle","winnerDetermined","moveOne","moves","Math","floor","random","length","move","moveTwo","moveOneDetails","moveTwoDetails","Promise","all","get","url","movePowerOne","data","power","movePowerTwo","prevLog","name","resolve","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","sprites","back_default","alt","style","width","front_default","onClick","_c","$RefreshReg$"],"sources":["/Users/sharjeelarif/Desktop/Pokemon-React-App/src/components/BattleView.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './BattleView.css';\n\ninterface Props {\n  pokemonOne: any;\n  pokemonTwo: any;\n  battleLog: string[]; // Array to hold multiple log entries\n  setBattleLog: React.Dispatch<React.SetStateAction<string[]>>;\n  resetBattle: () => void;\n}\n\nconst BattleView: React.FC<Props> = ({ pokemonOne, pokemonTwo, battleLog, setBattleLog, resetBattle }) => {\n  const [pokemonOneHealth, setPokemonOneHealth] = useState<number>(100);\n  const [pokemonTwoHealth, setPokemonTwoHealth] = useState<number>(100);\n  const [battleEnded, setBattleEnded] = useState<boolean>(false);\n\n  const startBattle = async () => {\n    try {\n      let winnerDetermined = false;\n\n      while (!winnerDetermined) {\n        const moveOne = pokemonOne.moves[Math.floor(Math.random() * pokemonOne.moves.length)].move;\n        const moveTwo = pokemonTwo.moves[Math.floor(Math.random() * pokemonTwo.moves.length)].move;\n\n        const [moveOneDetails, moveTwoDetails] = await Promise.all([\n          axios.get(moveOne.url),\n          axios.get(moveTwo.url)\n        ]);\n\n        const movePowerOne = moveOneDetails.data.power || 0;\n        const movePowerTwo = moveTwoDetails.data.power || 0;\n\n        if (movePowerOne > movePowerTwo) {\n          setBattleLog(prevLog => [...prevLog, `${pokemonOne.name} lands a decisive blow with ${moveOneDetails.data.name}, knocking out ${pokemonTwo.name}!`]);\n          setPokemonTwoHealth(0);\n          winnerDetermined = true;\n        } else if (movePowerOne < movePowerTwo) {\n          setBattleLog(prevLog => [...prevLog, `${pokemonTwo.name} lands a decisive blow with ${moveTwoDetails.data.name}, knocking out ${pokemonOne.name}!`]);\n          setPokemonOneHealth(0);\n          winnerDetermined = true;\n        } else {\n          setBattleLog(prevLog => [...prevLog, `It's a tie! Both ${pokemonOne.name} and ${pokemonTwo.name} used equally powerful moves. The battle continues...`]);\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n      }\n\n      setBattleEnded(true);\n\n    } catch (error) {\n      console.error('Error fetching move details:', error);\n      setBattleLog(prevLog => [...prevLog, 'An error occurred during the battle.']);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Battle View</h2>\n      <div className=\"pokemon-container\">\n        <div className=\"pokemon\">\n          <h3>{pokemonOne.name}</h3>\n          <img src={pokemonOne.sprites.back_default} alt={pokemonOne.name} />\n          <div className={`health-bar ${pokemonOneHealth === 0 ? 'empty' : ''}`}>\n            <div className=\"health-fill\" style={{ width: `${pokemonOneHealth}%` }}></div>\n          </div>\n        </div>\n        <div className=\"pokemon\">\n          <h3>{pokemonTwo.name}</h3>\n          <img src={pokemonTwo.sprites.front_default} alt={pokemonTwo.name} />\n          <div className={`health-bar ${pokemonTwoHealth === 0 ? 'empty' : ''}`}>\n            <div className=\"health-fill\" style={{ width: `${pokemonTwoHealth}%` }}></div>\n          </div>\n        </div>\n      </div>\n      {battleEnded ? (\n        <button onClick={resetBattle}>Select New Pok√©mon</button>\n      ) : (\n        <button onClick={startBattle}>Start Battle</button>\n      )}\n    </div>\n  );\n}\n\nexport default BattleView;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,MAAMC,UAA2B,GAAGA,CAAC;EAAEC,UAAU;EAAEC,UAAU;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACxG,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAS,GAAG,CAAC;EACrE,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAS,GAAG,CAAC;EACrE,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAU,KAAK,CAAC;EAE9D,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,IAAIC,gBAAgB,GAAG,KAAK;MAE5B,OAAO,CAACA,gBAAgB,EAAE;QACxB,MAAMC,OAAO,GAAGd,UAAU,CAACe,KAAK,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGlB,UAAU,CAACe,KAAK,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI;QAC1F,MAAMC,OAAO,GAAGpB,UAAU,CAACc,KAAK,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGjB,UAAU,CAACc,KAAK,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI;QAE1F,MAAM,CAACE,cAAc,EAAEC,cAAc,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACzD7B,KAAK,CAAC8B,GAAG,CAACZ,OAAO,CAACa,GAAG,CAAC,EACtB/B,KAAK,CAAC8B,GAAG,CAACL,OAAO,CAACM,GAAG,CAAC,CACvB,CAAC;QAEF,MAAMC,YAAY,GAAGN,cAAc,CAACO,IAAI,CAACC,KAAK,IAAI,CAAC;QACnD,MAAMC,YAAY,GAAGR,cAAc,CAACM,IAAI,CAACC,KAAK,IAAI,CAAC;QAEnD,IAAIF,YAAY,GAAGG,YAAY,EAAE;UAC/B5B,YAAY,CAAC6B,OAAO,IAAI,CAAC,GAAGA,OAAO,EAAG,GAAEhC,UAAU,CAACiC,IAAK,+BAA8BX,cAAc,CAACO,IAAI,CAACI,IAAK,kBAAiBhC,UAAU,CAACgC,IAAK,GAAE,CAAC,CAAC;UACpJxB,mBAAmB,CAAC,CAAC,CAAC;UACtBI,gBAAgB,GAAG,IAAI;QACzB,CAAC,MAAM,IAAIe,YAAY,GAAGG,YAAY,EAAE;UACtC5B,YAAY,CAAC6B,OAAO,IAAI,CAAC,GAAGA,OAAO,EAAG,GAAE/B,UAAU,CAACgC,IAAK,+BAA8BV,cAAc,CAACM,IAAI,CAACI,IAAK,kBAAiBjC,UAAU,CAACiC,IAAK,GAAE,CAAC,CAAC;UACpJ1B,mBAAmB,CAAC,CAAC,CAAC;UACtBM,gBAAgB,GAAG,IAAI;QACzB,CAAC,MAAM;UACLV,YAAY,CAAC6B,OAAO,IAAI,CAAC,GAAGA,OAAO,EAAG,oBAAmBhC,UAAU,CAACiC,IAAK,QAAOhC,UAAU,CAACgC,IAAK,uDAAsD,CAAC,CAAC;UACxJ,MAAM,IAAIT,OAAO,CAACU,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;QACzD;MACF;MAEAvB,cAAc,CAAC,IAAI,CAAC;IAEtB,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDjC,YAAY,CAAC6B,OAAO,IAAI,CAAC,GAAGA,OAAO,EAAE,sCAAsC,CAAC,CAAC;IAC/E;EACF,CAAC;EAED,oBACElC,OAAA;IAAAwC,QAAA,gBACExC,OAAA;MAAAwC,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB5C,OAAA;MAAK6C,SAAS,EAAC,mBAAmB;MAAAL,QAAA,gBAChCxC,OAAA;QAAK6C,SAAS,EAAC,SAAS;QAAAL,QAAA,gBACtBxC,OAAA;UAAAwC,QAAA,EAAKtC,UAAU,CAACiC;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1B5C,OAAA;UAAK8C,GAAG,EAAE5C,UAAU,CAAC6C,OAAO,CAACC,YAAa;UAACC,GAAG,EAAE/C,UAAU,CAACiC;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnE5C,OAAA;UAAK6C,SAAS,EAAG,cAAarC,gBAAgB,KAAK,CAAC,GAAG,OAAO,GAAG,EAAG,EAAE;UAAAgC,QAAA,eACpExC,OAAA;YAAK6C,SAAS,EAAC,aAAa;YAACK,KAAK,EAAE;cAAEC,KAAK,EAAG,GAAE3C,gBAAiB;YAAG;UAAE;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN5C,OAAA;QAAK6C,SAAS,EAAC,SAAS;QAAAL,QAAA,gBACtBxC,OAAA;UAAAwC,QAAA,EAAKrC,UAAU,CAACgC;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1B5C,OAAA;UAAK8C,GAAG,EAAE3C,UAAU,CAAC4C,OAAO,CAACK,aAAc;UAACH,GAAG,EAAE9C,UAAU,CAACgC;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpE5C,OAAA;UAAK6C,SAAS,EAAG,cAAanC,gBAAgB,KAAK,CAAC,GAAG,OAAO,GAAG,EAAG,EAAE;UAAA8B,QAAA,eACpExC,OAAA;YAAK6C,SAAS,EAAC,aAAa;YAACK,KAAK,EAAE;cAAEC,KAAK,EAAG,GAAEzC,gBAAiB;YAAG;UAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACLhC,WAAW,gBACVZ,OAAA;MAAQqD,OAAO,EAAE/C,WAAY;MAAAkC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEzD5C,OAAA;MAAQqD,OAAO,EAAEvC,WAAY;MAAA0B,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACnD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAArC,EAAA,CArEKN,UAA2B;AAAAqD,EAAA,GAA3BrD,UAA2B;AAuEjC,eAAeA,UAAU;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}