{"ast":null,"code":"var _jsxFileName = \"/Users/sharjeelarif/Desktop/Pokemon-React-App/src/components/BattleView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './BattleView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BattleView = ({\n  pokemonOne,\n  pokemonTwo,\n  setBattleLog,\n  resetBattle\n}) => {\n  _s();\n  const [pokemonOneHealth, setPokemonOneHealth] = useState(100);\n  const [pokemonTwoHealth, setPokemonTwoHealth] = useState(100);\n  const [battleEnded, setBattleEnded] = useState(false); // Track whether the battle has ended\n\n  const startBattle = async () => {\n    try {\n      // Randomly select a move for each Pokémon\n      const moveOne = pokemonOne.moves[Math.floor(Math.random() * pokemonOne.moves.length)].move;\n      const moveTwo = pokemonTwo.moves[Math.floor(Math.random() * pokemonTwo.moves.length)].move;\n\n      // Fetch move details from the API\n      const [moveOneDetails, moveTwoDetails] = await Promise.all([axios.get(moveOne.url), axios.get(moveTwo.url)]);\n\n      // Extract move power (default to 0 if not available)\n      const movePowerOne = moveOneDetails.data.power || 0;\n      const movePowerTwo = moveTwoDetails.data.power || 0;\n\n      // Determine the winner based on move power\n      if (movePowerOne > movePowerTwo) {\n        setBattleLog(`${pokemonOne.name} lands a decisive blow with ${moveOneDetails.data.name}, knocking out ${pokemonTwo.name}!`);\n        setPokemonTwoHealth(0);\n      } else if (movePowerOne < movePowerTwo) {\n        setBattleLog(`${pokemonTwo.name} lands a decisive blow with ${moveTwoDetails.data.name}, knocking out ${pokemonOne.name}!`);\n        setPokemonOneHealth(0);\n      } else {\n        setBattleLog(`Draw! Both ${pokemonOne.name} and ${pokemonTwo.name} used equally powerful moves.`);\n      }\n\n      // Mark the battle as ended\n      setBattleEnded(true);\n    } catch (error) {\n      console.error('Error fetching move details:', error);\n      setBattleLog('An error occurred during the battle.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Battle View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pokemonOne.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemonOne.sprites.front_default,\n          alt: pokemonOne.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `health-bar ${pokemonOneHealth === 0 ? 'empty' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-fill\",\n            style: {\n              width: `${pokemonOneHealth}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pokemonTwo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pokemonTwo.sprites.front_default,\n          alt: pokemonTwo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `health-bar ${pokemonTwoHealth === 0 ? 'empty' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"health-fill\",\n            style: {\n              width: `${pokemonTwoHealth}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), battleEnded ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetBattle,\n      children: \"Select New Pok\\xE9mon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) // New button to reset the game\n    : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startBattle,\n      children: \"Start Battle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(BattleView, \"/zraGPiJQO1EyCFzlgcSUAkteX0=\");\n_c = BattleView;\nexport default BattleView;\nvar _c;\n$RefreshReg$(_c, \"BattleView\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","BattleView","pokemonOne","pokemonTwo","setBattleLog","resetBattle","_s","pokemonOneHealth","setPokemonOneHealth","pokemonTwoHealth","setPokemonTwoHealth","battleEnded","setBattleEnded","startBattle","moveOne","moves","Math","floor","random","length","move","moveTwo","moveOneDetails","moveTwoDetails","Promise","all","get","url","movePowerOne","data","power","movePowerTwo","name","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","sprites","front_default","alt","style","width","onClick","_c","$RefreshReg$"],"sources":["/Users/sharjeelarif/Desktop/Pokemon-React-App/src/components/BattleView.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './BattleView.css';\n\ninterface Props {\n  pokemonOne: any;\n  pokemonTwo: any;\n  setBattleLog: React.Dispatch<React.SetStateAction<string>>;\n  resetBattle: () => void; // New prop to reset the battle\n}\n\nconst BattleView: React.FC<Props> = ({ pokemonOne, pokemonTwo, setBattleLog, resetBattle }) => {\n  const [pokemonOneHealth, setPokemonOneHealth] = useState<number>(100);\n  const [pokemonTwoHealth, setPokemonTwoHealth] = useState<number>(100);\n  const [battleEnded, setBattleEnded] = useState<boolean>(false); // Track whether the battle has ended\n\n  const startBattle = async () => {\n    try {\n      // Randomly select a move for each Pokémon\n      const moveOne = pokemonOne.moves[Math.floor(Math.random() * pokemonOne.moves.length)].move;\n      const moveTwo = pokemonTwo.moves[Math.floor(Math.random() * pokemonTwo.moves.length)].move;\n\n      // Fetch move details from the API\n      const [moveOneDetails, moveTwoDetails] = await Promise.all([\n        axios.get(moveOne.url),\n        axios.get(moveTwo.url)\n      ]);\n\n      // Extract move power (default to 0 if not available)\n      const movePowerOne = moveOneDetails.data.power || 0;\n      const movePowerTwo = moveTwoDetails.data.power || 0;\n\n      // Determine the winner based on move power\n      if (movePowerOne > movePowerTwo) {\n        setBattleLog(`${pokemonOne.name} lands a decisive blow with ${moveOneDetails.data.name}, knocking out ${pokemonTwo.name}!`);\n        setPokemonTwoHealth(0);\n      } else if (movePowerOne < movePowerTwo) {\n        setBattleLog(`${pokemonTwo.name} lands a decisive blow with ${moveTwoDetails.data.name}, knocking out ${pokemonOne.name}!`);\n        setPokemonOneHealth(0);\n      } else {\n        setBattleLog(`Draw! Both ${pokemonOne.name} and ${pokemonTwo.name} used equally powerful moves.`);\n      }\n\n      // Mark the battle as ended\n      setBattleEnded(true);\n\n    } catch (error) {\n      console.error('Error fetching move details:', error);\n      setBattleLog('An error occurred during the battle.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Battle View</h2>\n      <div className=\"pokemon-container\">\n        <div className=\"pokemon\">\n          <h3>{pokemonOne.name}</h3>\n          <img src={pokemonOne.sprites.front_default} alt={pokemonOne.name} />\n          <div className={`health-bar ${pokemonOneHealth === 0 ? 'empty' : ''}`}>\n            <div className=\"health-fill\" style={{ width: `${pokemonOneHealth}%` }}></div>\n          </div>\n        </div>\n        <div className=\"pokemon\">\n          <h3>{pokemonTwo.name}</h3>\n          <img src={pokemonTwo.sprites.front_default} alt={pokemonTwo.name} />\n          <div className={`health-bar ${pokemonTwoHealth === 0 ? 'empty' : ''}`}>\n            <div className=\"health-fill\" style={{ width: `${pokemonTwoHealth}%` }}></div>\n          </div>\n        </div>\n      </div>\n      {battleEnded ? (\n        <button onClick={resetBattle}>Select New Pokémon</button> // New button to reset the game\n      ) : (\n        <button onClick={startBattle}>Start Battle</button>\n      )}\n    </div>\n  );\n}\n\nexport default BattleView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}